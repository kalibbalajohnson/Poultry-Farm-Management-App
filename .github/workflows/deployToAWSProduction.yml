name: Deploy to Production

on:
  push:
    branches:
      - main
      - aws-production
  pull_request:
    branches:
      - main
      - aws-production
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test front-end
        run: |
          cd front-end
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: npm install, build, and test back-end
        run: |
          cd ../back-end
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Copy frontend build to backend
        run: |
            ls
            cp -r ../front-end/dist ./frontend

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Build Application
        run: npm run build

      - name: Deploy to AWS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          service: your-service-name
          cluster: your-cluster-name
          wait-for-service-stability: true

      - name: Invalidate Cache (optional for rollback)
        uses: aws-actions/amazon-cloudfront-invalidate-cache@v1
        with:
          distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          paths: "/*"
