# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure VM - poultry-app-production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  front_end_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      # Cache Node.js dependencies for the front-end
      - name: Cache front-end npm dependencies
        uses: actions/cache@v3
        with:
          path: front-end/node_modules
          key: front-end-${{ runner.os }}-node-${{ hashFiles('front-end/package-lock.json') }}
          restore-keys: |
            front-end-${{ runner.os }}-node-

      - name: npm install, test, and build front-end
        run: |
          cd front-end
          npm install
          npm run lint 
          npm run test
          npm run build

  back_end_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      # Cache Node.js dependencies for the back-end
      - name: Cache back-end npm dependencies
        uses: actions/cache@v3
        with:
          path: back-end/node_modules
          key: back-end-${{ runner.os }}-node-${{ hashFiles('back-end/package-lock.json') }}
          restore-keys: |
            back-end-${{ runner.os }}-node-

      - name: npm install, test, and build back-end
        run: |
          cd back-end
          npm install
          npm run lint
          npm run test
          npm run build --if-present

  deploy_to_production:
    runs-on: ubuntu-latest
    needs:
      - back_end_build
      - front_end_build
    environment:
      name: "Production"

    steps:
      # Checkout the latest code from the branch
      - name: Checkout code
        uses: actions/checkout@v2

        # Install SSH client on the runner
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y sshpass

      # SSH into the VM and execute the deployment steps
      - name: SSH and Deploy
        run: |
          sshpass -p "${{ secrets.VM_PASSWORD_PROD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USERNAME_PROD }}@${{ secrets.VM_HOST_PROD }} << 'EOF'
            set -e
            cd /home/${{ secrets.VM_USERNAME_PROD }}/Poultry-Management-App_Group_BSE24-9
            CURRENT_COMMIT=$(git rev-parse HEAD)
            git pull https://:${{ secrets.SHARED_GITHUB_TOKEN }}@github.com/kalibbalajohnson/Poultry-Management-App_Group_BSE24-9.git main
            cd front-end && npm i
            npm run build  
            cd ../back-end && npm i
            mkdir -p ../back-end/frontend/
            cp -R ../front-end/dist/* ../back-end/frontend/
            pm2 delete poultry-app || true
            pm2 start npm --name "poultry-app" -- start
            pm2 save

            sleep 5

            if ! curl -f http://http://20.63.73.62:3001; then
              echo "Deployment failed! Rolling back..." 
              git reset --hard $CURRENT_COMMIT
              git push https://${{ secrets.SHARED_GITHUB_TOKEN }}@github.com/kalibbalajohnson/Poultry-Management-App_Group_BSE24-9.git HEAD --force
              pm2 delete poultry-app || true
              pm2 start npm --name poultry-app -- start
              pm2 save
            fi  

          EOF
